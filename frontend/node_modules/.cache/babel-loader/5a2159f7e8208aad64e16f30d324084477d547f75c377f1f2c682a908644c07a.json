{"ast":null,"code":"const updateNetworth = async (selectedOption, currencyAmount) => {\n  let database = '';\n  if (selectedOption === 'Paycheck') {\n    database = 'earnings';\n  } else if (selectedOption === 'Gift') {\n    database = 'gifts';\n  } else if (selectedOption === 'Education') {\n    database = 'education';\n  } else if (selectedOption === 'Rent') {\n    database = 'rent';\n  } else if (selectedOption === 'Food') {\n    database = 'food';\n  } else if (selectedOption === 'Clothing') {\n    database = 'clothing';\n  } else if (selectedOption === 'Travel') {\n    database = 'travel';\n  } else if (selectedOption === 'Misc') {\n    database = 'misc';\n  } else if (selectedOption === 'Investment') {\n    database = 'investment';\n  } else if (selectedOption === 'Add to Investment Account') {\n    database = 'amountInvested';\n  }\n  const executePythonScript = async (selectedOption, currencyAmount) => {\n    const pythonScript = '/Users/benitochall/Documents/personalDevelopment/aboutMeProject/aboutMe/backend/updateFinances/updateFinances.py';\n    const args = `${selectedOption} ${currencyAmount}`;\n    // Notes to futures self, I had to change the executable permissions of the pull stocks data\n    // as well as make sure the path was correct\n\n    try {\n      const response = await fetch('http://localhost:3001/executePython', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pythonScript,\n          args\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to execute Python script');\n      }\n      const data = await response.json();\n      setOutput(data.output);\n    } catch (error) {\n      console.error(error);\n      setOutput('Error occurred while executing Python script');\n    }\n  };\n  try {\n    const output = await executePythonScript(selectedOption, currencyAmount);\n    return Number(output);\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\nexport { updateNetworth };","map":{"version":3,"names":["updateNetworth","selectedOption","currencyAmount","database","executePythonScript","pythonScript","args","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","setOutput","output","error","console","Number"],"sources":["/Users/benitochall/Documents/personalDevelopment/aboutMeProject/aboutMe/frontend/src/javascript/updateNetworth.js"],"sourcesContent":["const updateNetworth = async (selectedOption, currencyAmount) => {\n    let database = ''\n    if (selectedOption === 'Paycheck'){\n    database = 'earnings'\n    }\n    else if (selectedOption === 'Gift'){\n    database = 'gifts'\n    }\n\n    else if (selectedOption === 'Education'){\n    database = 'education'\n    }\n\n    else if (selectedOption === 'Rent'){\n    database = 'rent'\n    }\n\n    else if (selectedOption === 'Food'){\n    database = 'food'\n    }\n\n    else if (selectedOption === 'Clothing'){\n    database = 'clothing'\n    }\n\n    else if (selectedOption === 'Travel'){\n    database = 'travel'\n    }\n\n    else if (selectedOption === 'Misc'){\n    database = 'misc'\n    }\n\n    else if (selectedOption === 'Investment'){\n    database = 'investment'\n    }\n\n    else if (selectedOption === 'Add to Investment Account'){\n    database = 'amountInvested'\n    }\n    const executePythonScript = async (selectedOption, currencyAmount) => {\n        const pythonScript = '/Users/benitochall/Documents/personalDevelopment/aboutMeProject/aboutMe/backend/updateFinances/updateFinances.py';\n        const args = `${selectedOption} ${currencyAmount}`;\n        // Notes to futures self, I had to change the executable permissions of the pull stocks data\n        // as well as make sure the path was correct\n\n        try {\n        const response = await fetch('http://localhost:3001/executePython', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ pythonScript, args }),\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to execute Python script');\n        }\n\n        const data = await response.json();\n        setOutput(data.output);\n        } catch (error) {\n        console.error(error);\n        setOutput('Error occurred while executing Python script');\n        }\n    };\n\n\n\n    try {\n        const output = await executePythonScript(selectedOption, currencyAmount);\n        return Number(output);\n    } catch (error) {\n        console.error(error);\n        throw error;\n    }\n\n}; \n\nexport { updateNetworth }; "],"mappings":"AAAA,MAAMA,cAAc,GAAG,MAAAA,CAAOC,cAAc,EAAEC,cAAc,KAAK;EAC7D,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIF,cAAc,KAAK,UAAU,EAAC;IAClCE,QAAQ,GAAG,UAAU;EACrB,CAAC,MACI,IAAIF,cAAc,KAAK,MAAM,EAAC;IACnCE,QAAQ,GAAG,OAAO;EAClB,CAAC,MAEI,IAAIF,cAAc,KAAK,WAAW,EAAC;IACxCE,QAAQ,GAAG,WAAW;EACtB,CAAC,MAEI,IAAIF,cAAc,KAAK,MAAM,EAAC;IACnCE,QAAQ,GAAG,MAAM;EACjB,CAAC,MAEI,IAAIF,cAAc,KAAK,MAAM,EAAC;IACnCE,QAAQ,GAAG,MAAM;EACjB,CAAC,MAEI,IAAIF,cAAc,KAAK,UAAU,EAAC;IACvCE,QAAQ,GAAG,UAAU;EACrB,CAAC,MAEI,IAAIF,cAAc,KAAK,QAAQ,EAAC;IACrCE,QAAQ,GAAG,QAAQ;EACnB,CAAC,MAEI,IAAIF,cAAc,KAAK,MAAM,EAAC;IACnCE,QAAQ,GAAG,MAAM;EACjB,CAAC,MAEI,IAAIF,cAAc,KAAK,YAAY,EAAC;IACzCE,QAAQ,GAAG,YAAY;EACvB,CAAC,MAEI,IAAIF,cAAc,KAAK,2BAA2B,EAAC;IACxDE,QAAQ,GAAG,gBAAgB;EAC3B;EACA,MAAMC,mBAAmB,GAAG,MAAAA,CAAOH,cAAc,EAAEC,cAAc,KAAK;IAClE,MAAMG,YAAY,GAAG,kHAAkH;IACvI,MAAMC,IAAI,GAAI,GAAEL,cAAe,IAAGC,cAAe,EAAC;IAClD;IACA;;IAEA,IAAI;MACJ,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACT,cAAc,EAAE;QAChB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,YAAY;UAAEC;QAAK,CAAC;MAC/C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACtD;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCC,SAAS,CAACF,IAAI,CAACG,MAAM,CAAC;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBF,SAAS,CAAC,8CAA8C,CAAC;IACzD;EACJ,CAAC;EAID,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMf,mBAAmB,CAACH,cAAc,EAAEC,cAAc,CAAC;IACxE,OAAOoB,MAAM,CAACH,MAAM,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACf;AAEJ,CAAC;AAED,SAASpB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}