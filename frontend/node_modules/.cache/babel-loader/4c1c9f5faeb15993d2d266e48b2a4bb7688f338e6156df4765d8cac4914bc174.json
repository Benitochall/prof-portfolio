{"ast":null,"code":"var _jsxFileName = \"/Users/benitochall/Documents/personalDevelopment/aboutMeProject/aboutMe/frontend/src/components/NetWorth.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport RedBox from './RedBox';\nimport GrabStocks from './GrabStocks';\nimport { useStockEvaluation } from './context/StockEvaluationContext';\nimport UpdateNetworthBox from './UpdateNetworthBox';\nimport FinacneForm from './FinanceForm';\nimport { updateNetworth } from '../javascript/updateNetworth';\nimport { pullNetworth } from '../javascript/pullNetworth';\nimport { pullStockAmountFromDatabase } from '../javascript/pullStockAmountFromDatabase';\nimport { updateStocks } from '../javascript/updateStocks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NetWorth() {\n  _s();\n  const [vooStockAmount, setVooStockAmount] = useState(0);\n  const [googlStockAmount, setGooglStockAmount] = useState(0);\n  const [pltrStockAmount, setPltrStockAmount] = useState(0);\n  const {\n    stockEvaluation\n  } = useStockEvaluation();\n  const [totalNetworth, setTotalNetworth] = useState(0);\n  const [accountBalance, setAccountBalance] = useState(0);\n  const handleFinanceFormSubmit = async (selectedOption, currencyAmount, memo) => {\n    if (selectedOption !== 'Investment') {\n      try {\n        const updatedAccountBalance = await updateNetworth(selectedOption, currencyAmount, memo);\n        setAccountBalance(updatedAccountBalance);\n        setTotalNetworth(Math.ceil((stockEvaluation + accountBalance) * 100) / 100);\n      } catch (error) {\n        console.error(error);\n        setAccountBalance(0);\n      }\n    } else {\n      try {\n        const stockUpdate = await updateStocks(selectedOption, currencyAmount, memo);\n        const stockAmounts = stockUpdate.split(',');\n        if (stockAmounts[0].trim() === 'VOO') {\n          setVooStockAmount(Number(stockAmounts[1].trim() + vooStockAmount));\n        }\n        if (stock[0].trim() === 'GOOGL') {\n          setGooglStockAmount(Number(stockAmounts[1].trim()) + googlStockAmount);\n        }\n        if (stock[0].trim() === 'PLTR') {\n          setPltrStockAmount(Number(stockAmounts[1].trim()) + pltrStockAmount);\n        }\n\n        // the last thing to do is to render the new pull stocks from database\n        await pullStockAmountFromDatabase();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  useEffect(() => {\n    // this is done when both account balence and stock eveluation are ready \n    setTotalNetworth(Math.ceil((stockEvaluation + accountBalance) * 100) / 100);\n  }, [stockEvaluation, accountBalance]);\n\n  // pull networth is done when the component initally mounts\n  useEffect(() => {\n    Promise.all([pullNetworth(), pullStockAmountFromDatabase()]).then(([initialAccountBalance, result]) => {\n      // Set account balance\n      setAccountBalance(initialAccountBalance);\n\n      // Parse and set stock amounts\n      const stockAmounts = result.split(',');\n      for (const stockEntry of stockAmounts) {\n        const stock = stockEntry.split(':');\n        if (stock[0].trim() === 'VOO') {\n          setVooStockAmount(Number(stock[1].trim()));\n        }\n        if (stock[0].trim() === 'GOOGL') {\n          setGooglStockAmount(Number(stock[1].trim()));\n        }\n        if (stock[0].trim() === 'PLTR') {\n          setPltrStockAmount(Number(stock[1].trim()));\n        }\n      }\n    }).catch(error => {\n      console.error(error);\n      setAccountBalance(0);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"net-worth\",\n      children: [/*#__PURE__*/_jsxDEV(GrabStocks, {\n        vooStockAmount: vooStockAmount,\n        googlStockAmount: googlStockAmount,\n        pltrStockAmount: pltrStockAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RedBox, {\n        leftText: \"Net Worth:\",\n        rightText: stockEvaluation === 0 || stock ? 'Calculating...' : `$${totalNetworth}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#326771',\n          fontSize: '54px',\n          textAlign: 'left',\n          paddingLeft: '15px'\n        },\n        children: \"Welcome Bennett!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(UpdateNetworthBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FinacneForm, {\n          onSubmit: handleFinanceFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(NetWorth, \"6+zb9eX3WSidWC8EhW9XqhiX+vE=\", false, function () {\n  return [useStockEvaluation];\n});\n_c = NetWorth;\nexport default NetWorth;\nvar _c;\n$RefreshReg$(_c, \"NetWorth\");","map":{"version":3,"names":["React","useState","useEffect","RedBox","GrabStocks","useStockEvaluation","UpdateNetworthBox","FinacneForm","updateNetworth","pullNetworth","pullStockAmountFromDatabase","updateStocks","jsxDEV","_jsxDEV","Fragment","_Fragment","NetWorth","_s","vooStockAmount","setVooStockAmount","googlStockAmount","setGooglStockAmount","pltrStockAmount","setPltrStockAmount","stockEvaluation","totalNetworth","setTotalNetworth","accountBalance","setAccountBalance","handleFinanceFormSubmit","selectedOption","currencyAmount","memo","updatedAccountBalance","Math","ceil","error","console","stockUpdate","stockAmounts","split","trim","Number","stock","Promise","all","then","initialAccountBalance","result","stockEntry","catch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","leftText","rightText","style","color","fontSize","textAlign","paddingLeft","onSubmit","_c","$RefreshReg$"],"sources":["/Users/benitochall/Documents/personalDevelopment/aboutMeProject/aboutMe/frontend/src/components/NetWorth.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport RedBox from './RedBox';\nimport GrabStocks from './GrabStocks';\nimport { useStockEvaluation } from './context/StockEvaluationContext';\nimport UpdateNetworthBox from './UpdateNetworthBox';\nimport FinacneForm from './FinanceForm';\nimport { updateNetworth } from '../javascript/updateNetworth';\nimport { pullNetworth } from '../javascript/pullNetworth';\nimport { pullStockAmountFromDatabase } from '../javascript/pullStockAmountFromDatabase';\nimport { updateStocks } from '../javascript/updateStocks';\n\nfunction NetWorth() {\n  const [vooStockAmount, setVooStockAmount ] = useState(0);\n  const [googlStockAmount, setGooglStockAmount ] = useState(0);\n  const [pltrStockAmount, setPltrStockAmount ] = useState(0);\n  const { stockEvaluation } = useStockEvaluation();\n  const [totalNetworth, setTotalNetworth] = useState(0);\n  const [accountBalance, setAccountBalance] = useState(0);\n\n  const handleFinanceFormSubmit = async (selectedOption, currencyAmount, memo) => {\n\n    if (selectedOption !== 'Investment'){\n      try {\n        const updatedAccountBalance = await updateNetworth(selectedOption, currencyAmount, memo);\n        setAccountBalance(updatedAccountBalance);\n        setTotalNetworth(Math.ceil((stockEvaluation + accountBalance) * 100) / 100);\n      } catch (error) {\n        console.error(error);\n        setAccountBalance(0);\n      }\n    }\n    else {\n      try {\n        const stockUpdate = await updateStocks(selectedOption, currencyAmount, memo);\n        const stockAmounts = stockUpdate.split(',');\n        if (stockAmounts[0].trim() === 'VOO') {\n          setVooStockAmount(Number(stockAmounts[1].trim()+ vooStockAmount));\n        }\n        if (stock[0].trim() === 'GOOGL') {\n          setGooglStockAmount(Number(stockAmounts[1].trim() )+ googlStockAmount);\n        }\n        if (stock[0].trim() === 'PLTR') {\n          setPltrStockAmount(Number(stockAmounts[1].trim()) + pltrStockAmount);\n        }\n\n        // the last thing to do is to render the new pull stocks from database\n        await pullStockAmountFromDatabase();\n      } catch (error) {\n        console.error(error);\n      }\n\n    }\n  };\n\n  useEffect(() => {\n    // this is done when both account balence and stock eveluation are ready \n    setTotalNetworth(Math.ceil((stockEvaluation + accountBalance) * 100) / 100);\n  }, [stockEvaluation, accountBalance]);\n\n  // pull networth is done when the component initally mounts\n  useEffect(() => {\n    Promise.all([pullNetworth(), pullStockAmountFromDatabase()])\n      .then(([initialAccountBalance, result]) => {\n        // Set account balance\n        setAccountBalance(initialAccountBalance);\n  \n        // Parse and set stock amounts\n        const stockAmounts = result.split(',');\n        for (const stockEntry of stockAmounts) {\n          const stock = stockEntry.split(':');\n          if (stock[0].trim() === 'VOO') {\n            setVooStockAmount(Number(stock[1].trim()));\n          }\n          if (stock[0].trim() === 'GOOGL') {\n            setGooglStockAmount(Number(stock[1].trim()));\n          }\n          if (stock[0].trim() === 'PLTR') {\n            setPltrStockAmount(Number(stock[1].trim()));\n          }\n        }\n\n      })\n      .catch((error) => {\n        console.error(error);\n        setAccountBalance(0);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"net-worth\">\n        <GrabStocks\n          vooStockAmount={vooStockAmount}\n          googlStockAmount={googlStockAmount}\n          pltrStockAmount={pltrStockAmount}\n        />\n        <RedBox\n          leftText=\"Net Worth:\"\n          rightText={stockEvaluation === 0 || stock ? 'Calculating...' : `$${totalNetworth}`}\n        />\n        <h1\n          style={{\n            color: '#326771',\n            fontSize: '54px',\n            textAlign: 'left',\n            paddingLeft: '15px',\n          }}\n        >\n          Welcome Bennett!\n        </h1>\n\n        <div>\n          <UpdateNetworthBox></UpdateNetworthBox>\n          <FinacneForm onSubmit={handleFinanceFormSubmit}></FinacneForm>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default NetWorth;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,2BAA2B,QAAQ,2CAA2C;AACvF,SAASC,YAAY,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAE,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACxD,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAE,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAE,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC1D,MAAM;IAAEuB;EAAgB,CAAC,GAAGnB,kBAAkB,CAAC,CAAC;EAChD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAM4B,uBAAuB,GAAG,MAAAA,CAAOC,cAAc,EAAEC,cAAc,EAAEC,IAAI,KAAK;IAE9E,IAAIF,cAAc,KAAK,YAAY,EAAC;MAClC,IAAI;QACF,MAAMG,qBAAqB,GAAG,MAAMzB,cAAc,CAACsB,cAAc,EAAEC,cAAc,EAAEC,IAAI,CAAC;QACxFJ,iBAAiB,CAACK,qBAAqB,CAAC;QACxCP,gBAAgB,CAACQ,IAAI,CAACC,IAAI,CAAC,CAACX,eAAe,GAAGG,cAAc,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;MAC7E,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBR,iBAAiB,CAAC,CAAC,CAAC;MACtB;IACF,CAAC,MACI;MACH,IAAI;QACF,MAAMU,WAAW,GAAG,MAAM3B,YAAY,CAACmB,cAAc,EAAEC,cAAc,EAAEC,IAAI,CAAC;QAC5E,MAAMO,YAAY,GAAGD,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC;QAC3C,IAAID,YAAY,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;UACpCtB,iBAAiB,CAACuB,MAAM,CAACH,YAAY,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,GAAEvB,cAAc,CAAC,CAAC;QACnE;QACA,IAAIyB,KAAK,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,KAAK,OAAO,EAAE;UAC/BpB,mBAAmB,CAACqB,MAAM,CAACH,YAAY,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAE,CAAC,GAAErB,gBAAgB,CAAC;QACxE;QACA,IAAIuB,KAAK,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,KAAK,MAAM,EAAE;UAC9BlB,kBAAkB,CAACmB,MAAM,CAACH,YAAY,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,GAAGnB,eAAe,CAAC;QACtE;;QAEA;QACA,MAAMZ,2BAA2B,CAAC,CAAC;MACrC,CAAC,CAAC,OAAO0B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IAEF;EACF,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACd;IACAwB,gBAAgB,CAACQ,IAAI,CAACC,IAAI,CAAC,CAACX,eAAe,GAAGG,cAAc,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC;EAC7E,CAAC,EAAE,CAACH,eAAe,EAAEG,cAAc,CAAC,CAAC;;EAErC;EACAzB,SAAS,CAAC,MAAM;IACd0C,OAAO,CAACC,GAAG,CAAC,CAACpC,YAAY,CAAC,CAAC,EAAEC,2BAA2B,CAAC,CAAC,CAAC,CAAC,CACzDoC,IAAI,CAAC,CAAC,CAACC,qBAAqB,EAAEC,MAAM,CAAC,KAAK;MACzC;MACApB,iBAAiB,CAACmB,qBAAqB,CAAC;;MAExC;MACA,MAAMR,YAAY,GAAGS,MAAM,CAACR,KAAK,CAAC,GAAG,CAAC;MACtC,KAAK,MAAMS,UAAU,IAAIV,YAAY,EAAE;QACrC,MAAMI,KAAK,GAAGM,UAAU,CAACT,KAAK,CAAC,GAAG,CAAC;QACnC,IAAIG,KAAK,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;UAC7BtB,iBAAiB,CAACuB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C;QACA,IAAIE,KAAK,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,KAAK,OAAO,EAAE;UAC/BpB,mBAAmB,CAACqB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9C;QACA,IAAIE,KAAK,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,KAAK,MAAM,EAAE;UAC9BlB,kBAAkB,CAACmB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7C;MACF;IAEF,CAAC,CAAC,CACDS,KAAK,CAAEd,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBR,iBAAiB,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAAAE,SAAA;IAAAoC,QAAA,eACEtC,OAAA;MAAKuC,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxBtC,OAAA,CAACT,UAAU;QACTc,cAAc,EAAEA,cAAe;QAC/BE,gBAAgB,EAAEA,gBAAiB;QACnCE,eAAe,EAAEA;MAAgB;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACF3C,OAAA,CAACV,MAAM;QACLsD,QAAQ,EAAC,YAAY;QACrBC,SAAS,EAAElC,eAAe,KAAK,CAAC,IAAImB,KAAK,GAAG,gBAAgB,GAAI,IAAGlB,aAAc;MAAE;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF,CAAC,eACF3C,OAAA;QACE8C,KAAK,EAAE;UACLC,KAAK,EAAE,SAAS;UAChBC,QAAQ,EAAE,MAAM;UAChBC,SAAS,EAAE,MAAM;UACjBC,WAAW,EAAE;QACf,CAAE;QAAAZ,QAAA,EACH;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEL3C,OAAA;QAAAsC,QAAA,gBACEtC,OAAA,CAACP,iBAAiB;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAAC,eACvC3C,OAAA,CAACN,WAAW;UAACyD,QAAQ,EAAEnC;QAAwB;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACvC,EAAA,CA3GQD,QAAQ;EAAA,QAIaX,kBAAkB;AAAA;AAAA4D,EAAA,GAJvCjD,QAAQ;AA6GjB,eAAeA,QAAQ;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}