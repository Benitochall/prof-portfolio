{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTotalAmount } from './context/TotalAmountContext';\nfunction GrabStocks({\n  vooStockAmount,\n  googlStockAmount,\n  pltrStockAmount\n}) {\n  _s();\n  const [output, setOutput] = useState('');\n  const {\n    updateTotalAmount\n  } = useTotalAmount();\n  const [totalAmount, setTotalAmount] = useState(0);\n  const executePythonScript = async () => {\n    const pythonScript = '/Users/benitochall/Documents/personalDevelopment/100kStarting/networthProject/networth/backend/pullStocks/pullstockdata.py';\n    // const args = 'arg1 arg2'; Doesn't take any args\n    // Notes to futures self, I had to change the executable permissions of the pull stocks data\n    // as well as make sure the path was correct\n\n    try {\n      const response = await fetch('http://localhost:3001/executePython', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pythonScript\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to execute Python script');\n      }\n      const data = await response.json();\n      setOutput(data.output);\n    } catch (error) {\n      console.error(error);\n      setOutput('Error occurred while executing Python script');\n    }\n  };\n  // this makes the fuction autmatically run while the data is being pulled\n  useEffect(() => {\n    executePythonScript();\n  });\n  useEffect(() => {\n    if (output && vooStockAmount && googlStockAmount && pltrStockAmount) {\n      // Parse and calculate the totalAmount whenever output changes\n      let vooNum;\n      let pltrNum;\n      let googlNum;\n      const stocks = output.split(',');\n      for (let i = 0; i < stocks.length; i += 1) {\n        const stock = stocks[i].split(':');\n        if (stock[0] === 'VOO') {\n          vooNum = Number(stock[1]);\n        }\n        if (stock[0] === 'GOOGL') {\n          googlNum = Number(stock[1]);\n        }\n        if (stock[0] === 'PLTR') {\n          pltrNum = Number(stock[1]);\n        }\n      }\n      const vooAmount = vooNum * Number(vooStockAmount);\n      const googlAmount = googlNum * Number(googlStockAmount);\n      const pltrAmount = pltrNum * Number(pltrStockAmount);\n      const newTotalAmount = Math.ceil((vooAmount + googlAmount + pltrAmount) * 100) / 100;\n      console.log(vooNum);\n      console.log(googlNum);\n      console.log(googlNum);\n      setTotalAmount(newTotalAmount);\n      up;\n    }\n    return () => {\n      setTotalAmount(0);\n    };\n  }, [output, vooStockAmount, googlStockAmount, pltrStockAmount]);\n}\n_s(GrabStocks, \"cmg52JeHChPh46gsrXE5JksA1Ac=\", false, function () {\n  return [useTotalAmount];\n});\n_c = GrabStocks;\nGrabStocks.propTypes = {\n  vooStockAmount: PropTypes.number,\n  googlStockAmount: PropTypes.number,\n  pltrStockAmount: PropTypes.number\n};\nGrabStocks.defaultProps = {\n  vooStockAmount: 0,\n  googlStockAmount: 0,\n  pltrStockAmount: 0\n};\nexport default GrabStocks;\nvar _c;\n$RefreshReg$(_c, \"GrabStocks\");","map":{"version":3,"names":["useState","useEffect","PropTypes","useTotalAmount","GrabStocks","vooStockAmount","googlStockAmount","pltrStockAmount","_s","output","setOutput","updateTotalAmount","totalAmount","setTotalAmount","executePythonScript","pythonScript","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","vooNum","pltrNum","googlNum","stocks","split","i","length","stock","Number","vooAmount","googlAmount","pltrAmount","newTotalAmount","Math","ceil","log","up","_c","propTypes","number","defaultProps","$RefreshReg$"],"sources":["/Users/benitochall/Documents/personalDevelopment/100kStarting/networthProject/networth/frontend/dev-portfolio/src/components/GrabStocks.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTotalAmount } from './context/TotalAmountContext';\n\nfunction GrabStocks({ vooStockAmount, googlStockAmount, pltrStockAmount }) {\n  const [output, setOutput] = useState('');\n  const { updateTotalAmount } = useTotalAmount();\n  const [totalAmount, setTotalAmount] = useState(0);\n\n  const executePythonScript = async () => {\n    const pythonScript = '/Users/benitochall/Documents/personalDevelopment/100kStarting/networthProject/networth/backend/pullStocks/pullstockdata.py';\n    // const args = 'arg1 arg2'; Doesn't take any args\n    // Notes to futures self, I had to change the executable permissions of the pull stocks data\n    // as well as make sure the path was correct\n\n    try {\n      const response = await fetch('http://localhost:3001/executePython', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ pythonScript }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to execute Python script');\n      }\n\n      const data = await response.json();\n      setOutput(data.output);\n    } catch (error) {\n      console.error(error);\n      setOutput('Error occurred while executing Python script');\n    }\n  };\n  // this makes the fuction autmatically run while the data is being pulled\n  useEffect(() => { executePythonScript(); });\n\n  useEffect(() => {\n    if (output && vooStockAmount && googlStockAmount && pltrStockAmount) {\n      // Parse and calculate the totalAmount whenever output changes\n      let vooNum;\n      let pltrNum;\n      let googlNum;\n\n      const stocks = output.split(',');\n      for (let i = 0; i < stocks.length; i += 1) {\n        const stock = stocks[i].split(':');\n        if (stock[0] === 'VOO') {\n          vooNum = Number(stock[1]);\n        }\n        if (stock[0] === 'GOOGL') {\n          googlNum = Number(stock[1]);\n        }\n        if (stock[0] === 'PLTR') {\n          pltrNum = Number(stock[1]);\n        }\n      }\n\n      const vooAmount = vooNum * Number(vooStockAmount);\n      const googlAmount = googlNum * Number(googlStockAmount);\n      const pltrAmount = pltrNum * Number(pltrStockAmount);\n      const newTotalAmount = Math.ceil((vooAmount + googlAmount + pltrAmount) * 100) / 100;\n      console.log(vooNum);\n      console.log(googlNum);\n      console.log(googlNum);\n\n      setTotalAmount(newTotalAmount);\n      up\n    }\n    return () => {\n      setTotalAmount(0);\n    };\n  }, [output, vooStockAmount, googlStockAmount, pltrStockAmount]);\n}\n\nGrabStocks.propTypes = {\n  vooStockAmount: PropTypes.number,\n  googlStockAmount: PropTypes.number,\n  pltrStockAmount: PropTypes.number,\n};\n\nGrabStocks.defaultProps = {\n  vooStockAmount: 0,\n  googlStockAmount: 0,\n  pltrStockAmount: 0,\n};\n\nexport default GrabStocks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}