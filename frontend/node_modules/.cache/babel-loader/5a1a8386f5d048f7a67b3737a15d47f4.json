{"ast":null,"code":"var _jsxFileName = \"/Users/benitochall/Documents/personalDevelopment/100kStarting/networthProject/networth/frontend/dev-portfolio/src/components/Currentmoney.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Currentmoney() {\n  _s();\n  const [output, setOutput] = useState('');\n  const executePythonScript = async () => {\n    const pythonScript = '../../../../backend/pullStocks/pullstockdata.py';\n    // const args = 'arg1 arg2'; Doesn't take any args\n\n    try {\n      const response = await fetch('/executePython', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pythonScript\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to execute Python script');\n      }\n      const data = await response.json();\n      setOutput(data.output);\n      console.log(output);\n    } catch (error) {\n      console.error(error);\n      setOutput('Error occurred while executing Python script');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: executePythonScript,\n      children: \"Execute Python Script\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: output\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Currentmoney, \"ed78R9iIyxY5SZdctEQGoAk7t10=\");\n_c = Currentmoney;\nexport default Currentmoney;\nvar _c;\n$RefreshReg$(_c, \"Currentmoney\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Currentmoney","_s","output","setOutput","executePythonScript","pythonScript","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benitochall/Documents/personalDevelopment/100kStarting/networthProject/networth/frontend/dev-portfolio/src/components/Currentmoney.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Currentmoney() {\n  const [output, setOutput] = useState('');\n  const executePythonScript = async () => {\n    const pythonScript = '../../../../backend/pullStocks/pullstockdata.py';\n    // const args = 'arg1 arg2'; Doesn't take any args\n\n    try {\n      const response = await fetch('/executePython', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ pythonScript }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to execute Python script');\n      }\n\n      const data = await response.json();\n      setOutput(data.output);\n      console.log(output);\n    } catch (error) {\n      console.error(error);\n      setOutput('Error occurred while executing Python script');\n    }\n  };\n\n  return (\n    <div>\n      <button type=\"button\" onClick={executePythonScript}>Execute Python Script</button>\n      <div>\n        <h2>Output:</h2>\n        <pre>{output}</pre>\n      </div>\n    </div>\n  );\n}\n\nexport default Currentmoney;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMO,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMC,YAAY,GAAG,iDAAiD;IACtE;;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,EAAE;QAC7CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAa,CAAC;MACvC,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACpD;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCb,SAAS,CAACY,IAAI,CAACb,MAAM,CAAC;MACtBe,OAAO,CAACC,GAAG,CAAChB,MAAM,CAAC;IACrB,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACpBhB,SAAS,CAAC,8CAA8C,CAAC;IAC3D;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAElB,mBAAoB;MAAAgB,QAAA,EAAC;IAAqB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClF3B,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB3B,OAAA;QAAAqB,QAAA,EAAMlB;MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CArCQD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAuCrB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}