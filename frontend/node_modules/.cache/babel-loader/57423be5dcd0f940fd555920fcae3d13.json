{"ast":null,"code":"var _jsxFileName = \"/Users/benitochall/Documents/personalDevelopment/100kStarting/networthProject/networth/frontend/dev-portfolio/src/components/GrabStocks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GrabStocks({\n  vooStockAmount,\n  googlStockAmount,\n  pltrStockAmount\n}) {\n  _s();\n  const [output, setOutput] = useState('');\n  const [totalAmount, setTotalAmount] = useState(0);\n  const executePythonScript = async () => {\n    const pythonScript = '/Users/benitochall/Documents/personalDevelopment/100kStarting/networthProject/networth/backend/pullStocks/pullstockdata.py';\n    // const args = 'arg1 arg2'; Doesn't take any args\n    // Notes to futures self, I had to change the executable permissions of the pull stocks data\n    // as well as make sure the path was correct\n\n    try {\n      const response = await fetch('http://localhost:3001/executePython', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pythonScript\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to execute Python script');\n      }\n      const data = await response.json();\n      setOutput(data.output);\n      console.log(output);\n    } catch (error) {\n      console.error(error);\n      setOutput('Error occurred while executing Python script');\n    }\n  };\n  // this makes the fuction autmatically run while the data is being pulled\n  useEffect(() => {\n    executePythonScript();\n  });\n  useEffect(() => {\n    if (output !== '' && vooStockAmount && googlStockAmount && pltrStockAmount) {\n      // Parse and calculate the totalAmount whenever output changes\n      const destructured = output;\n      const vooAmount = Number(output.VOO) * vooStockAmount;\n      const googlAmount = Number(destroutputuctured.GOOGL) * googlStockAmount;\n      const pltrAmount = Number(destructured.PLTR) * pltrStockAmount;\n      const newTotalAmount = vooAmount + googlAmount + pltrAmount;\n      setTotalAmount(newTotalAmount);\n    }\n  }, [output, vooStockAmount, googlStockAmount, pltrStockAmount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Investment Evaluation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), totalAmount === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Caclculating ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : {\n        totalAmount\n      }, /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Investment Evaluation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(GrabStocks, \"nZYoQIPfYVy3dhYHhyBozq2ZPL8=\");\n_c = GrabStocks;\nGrabStocks.propTypes = {\n  vooStockAmount: PropTypes.number,\n  googlStockAmount: PropTypes.number,\n  pltrStockAmount: PropTypes.number\n};\nGrabStocks.defaultProps = {\n  vooStockAmount: 0,\n  googlStockAmount: 0,\n  pltrStockAmount: 0\n};\nexport default GrabStocks;\nvar _c;\n$RefreshReg$(_c, \"GrabStocks\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","jsxDEV","_jsxDEV","GrabStocks","vooStockAmount","googlStockAmount","pltrStockAmount","_s","output","setOutput","totalAmount","setTotalAmount","executePythonScript","pythonScript","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","destructured","vooAmount","Number","VOO","googlAmount","destroutputuctured","GOOGL","pltrAmount","PLTR","newTotalAmount","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","number","defaultProps","$RefreshReg$"],"sources":["/Users/benitochall/Documents/personalDevelopment/100kStarting/networthProject/networth/frontend/dev-portfolio/src/components/GrabStocks.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction GrabStocks({ vooStockAmount, googlStockAmount, pltrStockAmount }) {\n  const [output, setOutput] = useState('');\n  const [totalAmount, setTotalAmount] = useState(0);\n\n  const executePythonScript = async () => {\n    const pythonScript = '/Users/benitochall/Documents/personalDevelopment/100kStarting/networthProject/networth/backend/pullStocks/pullstockdata.py';\n    // const args = 'arg1 arg2'; Doesn't take any args\n    // Notes to futures self, I had to change the executable permissions of the pull stocks data\n    // as well as make sure the path was correct\n\n    try {\n      const response = await fetch('http://localhost:3001/executePython', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ pythonScript }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to execute Python script');\n      }\n\n      const data = await response.json();\n      setOutput(data.output);\n      console.log(output);\n    } catch (error) {\n      console.error(error);\n      setOutput('Error occurred while executing Python script');\n    }\n  };\n  // this makes the fuction autmatically run while the data is being pulled\n  useEffect(() => { executePythonScript(); });\n\n  useEffect(() => {\n    if (output !== '' && vooStockAmount && googlStockAmount && pltrStockAmount) {\n      // Parse and calculate the totalAmount whenever output changes\n      const destructured = output;\n      const vooAmount = Number(output.VOO) * vooStockAmount;\n      const googlAmount = Number(destroutputuctured.GOOGL) * googlStockAmount;\n      const pltrAmount = Number(destructured.PLTR) * pltrStockAmount;\n      const newTotalAmount = vooAmount + googlAmount + pltrAmount;\n      setTotalAmount(newTotalAmount);\n    }\n  }, [output, vooStockAmount, googlStockAmount, pltrStockAmount]);\n\n  return (\n    <div>\n      <div>\n        <h2>Investment Evaluation:</h2>\n        {totalAmount === 0 ? (\n          <h3>Caclculating ...</h3>\n        ) : (\n          { totalAmount }\n        )}\n        <h3>\n          Investment Evaluation:\n        </h3>\n      </div>\n    </div>\n  );\n}\n\nGrabStocks.propTypes = {\n  vooStockAmount: PropTypes.number,\n  googlStockAmount: PropTypes.number,\n  pltrStockAmount: PropTypes.number,\n};\n\nGrabStocks.defaultProps = {\n  vooStockAmount: 0,\n  googlStockAmount: 0,\n  pltrStockAmount: 0,\n};\n\nexport default GrabStocks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}